# name: SQLFluff

# on:
#   - push
#   - pull_request

# jobs:
#   lint-models:
#     runs-on: ubuntu-latest
#     steps:
#       - name: checkout
#         uses: actions/checkout@v2
#       - name: Install Python
#         uses: "actions/setup-python@v2"
#         with:
#           python-version: "3.7"
#       - name: install sqlfluff
#         run: "pip install sqlfluff"
#       - name: Get changed files
#         id: get_file_changes
#         uses: trilom/file-changes-action@v1.2.4
#         with:
#           output: ' '

#       - name: Get changed .sql files in /models to lint
#         id: get_files_to_lint
#         shell: bash -l {0}
#         run: |
#           # Set the command in the $() brackets as an output to use in later steps
#           echo "::set-output name=lintees::$(
#           # Issue where grep regular expressions don't work as expected on the
#           # Github Actions shell, check dbt/models/ folder
#           echo \
#           $(echo ${{ steps.get_file_changes.outputs.files_modified }} |
#           tr -s ' ' '\n' |
#           grep -E '^dbt/models.*[.]sql$' |
#           tr -s '\n' ' ') \
#           $(echo ${{ steps.get_file_changes.outputs.files_added }} |
#           tr -s ' ' '\n' |
#           grep -E '^dbt/models.*[.]sql$' |
#           tr -s '\n' ' ')
#           )"
#       - name: Lint dbt models
#         id: sqlfluff_json
#         if: steps.get_files_to_lint.outputs.lintees != ''
#         shell: bash -l {0}
#         run: sqlfluff lint --format github-annotation --annotation-level failure --nofail ${{ steps.get_files_to_lint.outputs.lintees }} > annotations.json
#       - name: Annotate
#         uses: yuzutech/annotations-action@v0.3.0
#         with:
#           repo-token: "${{ secrets.GITHUB_TOKEN }}"
#           title: "SQLFluff Lint"
#           input: "./annotations.json"

name: sqlfluff with reviewdog
on:
  pull_request:
  push:
jobs:
  test-check:
    name: runner / sqlfluff (github-check)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # only run when a comment requests linting
      - uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: '/lint'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - uses: yu-iskw/action-sqlfluff@v3
        if: steps.check.outputs.triggered == 'true'
        id: lint-sql
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          sqlfluff_version: "1.2.1"
          sqlfluff_command: "fix" # Or "lint"
          config: "${{ github.workspace }}/.sqlfluff"
          paths: '${{ github.workspace }}/models'
      - name: 'Show outputs (Optional)'
        shell: bash
        run: |
          echo '${{ steps.lint-sql.outputs.sqlfluff-results }}' | jq -r '.'
          echo '${{ steps.lint-sql.outputs.sqlfluff-results-rdjson }}' | jq -r '.'
